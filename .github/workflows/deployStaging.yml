name: Deploy Server

on:
  push:
    branches: [ "cicd-test" ]

jobs:
  deploy:
    strategy:
      matrix:
        runner: [dev]
      max-parallel: 1
    runs-on: ${{ matrix.runner }}
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Stop PM2
        run: pm2 stop 0

      - name: Delete Old PM2
        run: pm2 delete 0

      - name: Install Server Dependencies
        run: npm ci

      - name: Create ecosystem.config.js
        run: |
          echo "module.exports = {
            apps: [
              {
                name: 'vendor-reports',
                script: './server/main.js',
                instances: 1,
                autorestart: true,
                watch: false,
                max_memory_restart: '1G',
                env: {
                  NODE_ENV: 'development',
                  DB_HOST: '${{ secrets.DB_HOST }}',
                  DB_USER: '${{ secrets.DB_USER }}',
                  DB_PASS: '${{ secrets.DB_PASS }}',
                  DB_NAME: '${{ secrets.DB_NAME }}',
                  DB_PORT: '${{ secrets.DB_PORT }}',
                  JWT_SKEY: '${{ secrets.JWT_SKEY }}',
                },
                env_production: {
                  NODE_ENV: 'production',
                  DB_HOST: '${{ secrets.DB_HOST }}',
                  DB_USER: '${{ secrets.DB_USER }}',
                  DB_PASS: '${{ secrets.DB_PASS }}',
                  DB_NAME: '${{ secrets.DB_NAME }}',
                  DB_PORT: '${{ secrets.DB_PORT }}',
                  JWT_SKEY: '${{ secrets.JWT_SKEY }}',
                }
              }
            ]
          };" > ecosystem.config.js

      - name: Install Client Dependencies
        run: cd ./client && npm ci && npm run build && cd ..

      - name: Start application with PM2
        run: pm2 start ecosystem.config.js --env production

      - name: Save PM2 state
        run: pm2 save
